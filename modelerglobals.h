#ifndef _MODELER_GLOBALS_H
#define _MODELER_GLOBALS_H

#ifndef M_PI
#define M_PI 3.141592653589793238462643383279502
#endif

// This is a list of the controls for the SampleModel
// We'll use these constants to access the values 
// of the controls from the user interface.
//enum SampleModelControls
//{ 
//	XPOS, YPOS, ZPOS, HEIGHT, ROTATE, NUMCONTROLS
//};

enum MyModelControls
{
	XPOS, YPOS, ZPOS, 
	XSCALE, YSCALE, ZSCALE,
	BODY_HEIGHT, ARM_LENGTH, SHOULDER_LENGTH, 
	ARM_VERTICAL_ANGLE, FINGERS_ROTATE, 
	FRONT_LEFT_ROTATE_X, FRONT_RIGHT_ROTATE_X, BACK_LEFT_ROTATE_X, BACK_RIGHT_ROTATE_X, 
	FRONT_LEFT_ROTATE_Z, FRONT_RIGHT_ROTATE_Z, BACK_LEFT_ROTATE_Z, BACK_RIGHT_ROTATE_Z,
	BODY_ROTATE_X, BODY_ROTATE_Y, BODY_ROTATE_Z, 
	LIGHT0_X, LIGHT0_Y, LIGHT0_Z, LIGHT1_X, LIGHT1_Y, LIGHT1_Z, USE_SPECULAR, SPECULAR_SHINESS,
	LEVEL_DETAIL, USE_TEXTURE, USE_COMPLEX_SHAPE, USE_TWIST, USE_SURFACE_OF_ROTATION, 
	USE_L_SYSTEM, L_SYSTEM_NUM_ITER, L_SYSTEM_ANGLE,
	USE_METABALL, METABALL_THRESHOLD, ARM_NUMBER, LEFT_ROTATE_X, RIGHT_ROTATE_X,
	LEFT_ROTATE_Z, RIGHT_ROTATE_Z,MOOD_CYCLING,
	NUMCONTROLS
};

// Colors
#define COLOR_RED		1.0f, 0.0f, 0.0f
#define COLOR_GREEN		0.0f, 1.0f, 0.0f
#define COLOR_BLUE		0.0f, 0.0f, 1.0f

// We'll be getting the instance of the application a lot; 
// might as well have it as a macro.
#define VAL(x) (ModelerApplication::Instance()->GetControlValue(x))

#endif